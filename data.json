[
    {
        "task": "Step1: Fibonacci",
        "lines": ["def fibonacci(max):\n", "    a, b = 0, 1\n", "    while a < max:\n", "        yield a\n", "        a, b = b, a + b\n", "for n in fibonacci(100):\n", "    print (n)"]
    },
    {
        "task": "Step2: Insertion sort",
        "lines": ["lst = [5, 7, 20, 11, 10, 2, 1, 5, 17, 0]\n", "for i in range(1, len(lst)):\n", "    j = i-1\n", "    while (j >= 0) and (lst[j] > lst[j+1]):\n", "        lst[j], lst[j+1] = lst[j+1], lst[j]\n", "        j -= 1\n", "print(lst)"]
    },
    {
        "task": "Step3: Matrix",
        "lines": ["def print_matrix(m):\n", "    for i in m:\n", "        print(i)\n", "matrix = [[0.5,   0,   0,   0,   0],\n          [  1, 0.5,   0,   0,   0],\n          [  1,   1, 0.5,   0,   0],\n          [  1,   1,   1, 0.5,   0],\n          [  1,   1,   1,   1, 0.5]]\n", "matrix_t = list(zip(*matrix))\n", "print_matrix(matrix_t)\n"]
    },
    {
        "easiness" : 4,
        "task" : "Step4: 99 bottles of beer",
        "lines" : ["for quant in range(99, 0, -1):\n", "   if quant > 1:\n", "      print quant, \"bottles of beer on the wall,\", quant, \"bottles of beer.\"\n", "      if quant > 2:\n", "         suffix = str(quant - 1) + \" bottles of beer on the wall.\"\n", "      else:\n", "         suffix = \"1 bottle of beer on the wall.\"\n", "   elif quant == 1:\n", "      print \"1 bottle of beer on the wall, 1 bottle of beer.\"\n", "      suffix = \"no more beer on the wall!\"\n", "   print \"Take one down, pass it around,\", suffix\n", "   print \"--\""]
    }
]
